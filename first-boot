#!/bin/sh
# SPDX-License-Identifier: MIT

if [ -e "$(dirname "$0")"/functions.sh ]; then
    . "$(dirname "$0")"/functions.sh
else
    . /usr/share/asahi-scripts/functions.sh
fi

mount_sys_esp /efi

root_dev=$(findmnt -n -o SOURCE /)
efi_dev=$(findmnt -n -o SOURCE /efi)

if [ -e "$root_dev" ]; then
    echo "Resizing root filesystem ..."
    resize2fs "$root_dev"

    echo "Randomizing root filesystem UUID..."
    tune2fs -U random "$root_dev"

    root_uuid="$(blkid -c /dev/null "$root_dev" -o export | grep '^UUID=')"
    echo "Root filesystem: $root_uuid"
    echo
fi

if [ -e "$efi_dev" ] && \
    blkid "$efi_dev" | grep -q 'TYPE="vfat"'; then

    echo "Randomizing EFI system partition UUID..."
    # Ugly... why isn't there a command to do this?
    ssize="$(blockdev --getss "$efi_dev")"
    dd bs=1 seek=67 count=4 conv=notrunc if=/dev/urandom of="$efi_dev"
    dd bs=1 skip=67 seek=$((67+6*$ssize)) count=4 conv=notrunc if="$efi_dev" of="$efi_dev"

    efi_uuid="$(blkid -c /dev/null "$efi_dev" -o export | grep '^UUID=')"
    echo "EFI partition: $efi_uuid"
    echo
fi

if [ ! -z "$root_uuid" ] && [ ! -z "$efi_uuid" ]; then
    echo "Regenerating /etc/fstab..."
    genfstab -p -U / > /etc/fstab
fi

grub-install --efi-directory=/efi --bootloader-id="AOSC OS" --removable
update-grub
# FIXME: For some reason, without running update-grub twice, the sysroot UUID
# does not updated according with the new randomised UUID.
update-grub

echo "All done, self-destroying ..."
rm -v /usr/lib/systemd/system/multi-user.target.wants/first-boot.service
rm -v /usr/lib/systemd/system/first-boot.service
rm -v "$0"
